function ValidarCPF(executionContext) {
    if (executionContext === null)
        return;

    var formContext = executionContext.getFormContext();
    var cpf = executionContext.getEventSource().getValue();
    var label = executionContext.getEventSource().getName();

    isValid = true;
    if (cpf !== null && cpf !== "") {
        cpf = cpf.replace(/[^\d]+/g, '');
        var Soma;
        var Resto;
        Soma = 0;
        if (cpf.length !== 11 ||
            cpf === "00000000000" ||
            cpf === "11111111111" ||
            cpf === "22222222222" ||
            cpf === "33333333333" ||
            cpf === "44444444444" ||
            cpf === "55555555555" ||
            cpf === "66666666666" ||
            cpf === "77777777777" ||
            cpf === "88888888888" ||
            cpf === "99999999999") {
            isValid = false;
        }

        for (i = 1; i <= 9; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (11 - i);
        Resto = (Soma * 10) % 11;

        if ((Resto === 10) || (Resto === 11)) Resto = 0;
        if (Resto !== parseInt(cpf.substring(9, 10))) {
            isValid = false;
        }

        Soma = 0;
        for (i = 1; i <= 10; i++) Soma = Soma + parseInt(cpf.substring(i - 1, i)) * (12 - i);
        Resto = (Soma * 10) % 11;

        if ((Resto === 10) || (Resto === 11)) { Resto = 0; }
        if (Resto !== parseInt(cpf.substring(10, 11))) {
            isValid = false;
        }
    }
    else {
        isValid = false;
    }

    if (isValid) {
        cpf = cpf.substring(0, 3) + '.' + cpf.substring(3, 6) + '.' + cpf.substring(6, 9) + '-' + cpf.substring(9);
        cpf = formContext.getAttribute(label).setValue(cpf);
    } else {
        Xrm.Navigation.openAlertDialog({ confirmButtonLabel: "OK", text: "CPF: " + cpf + " - InvÃ¡lido" }, { height: 100, width: 300 }).then(
            function success(result) {
                cpf = formContext.getAttribute(label).setValue("");
            }
        );
    }
}

function campoClienteAgendamento(executionContext) {
    debugger;

    if (executionContext === null)
        return;

    var formContext = executionContext.getFormContext();

    var campAnimal = formContext.getAttribute("smt_animal").getValue();
	
    if (campAnimal != null) {

        Xrm.WebApi.retrieveRecord("smt_animal", campAnimal[0].id, "?$select=_smt_dono_value").then(
            function success(result) {
                console.log(result);
                // Columns
                debugger;		
				var smt_dono = result["_smt_dono_value"]; // Lookup
				var smt_dono_formatted = result["_smt_dono_value@OData.Community.Display.V1.FormattedValue"];
				var smt_dono_lookuplogicalname = result["_smt_dono_value@Microsoft.Dynamics.CRM.lookuplogicalname"];

				var lookupValue = new Array();
				lookupValue[0] = new Object();
				lookupValue[0].id = smt_dono;
				lookupValue[0].name = smt_dono_formatted;
				lookupValue[0].entityType = smt_dono_lookuplogicalname;

                formContext.getAttribute("smt_cliente").setValue(lookupValue);
            },
            function (error) {
                console.log(error.message);
            }
        );
    }else{
		formContext.getAttribute("smt_cliente").setValue(null);
		formContext.getAttribute("smt_valor").setValue(null);
	}
}

function adicionalAnimalManso(executionContext) {
    debugger;

    if (executionContext === null)
        return;

    var formContext = executionContext.getFormContext();

    var campAnimal = formContext.getAttribute("smt_animal").getValue();
	
    if (campAnimal != null) {
        Xrm.WebApi.retrieveRecord("smt_animal", campAnimal[0].id, "?$select=smt_manso").then(
            function success(result) {
                console.log(result);
                // Columns
                debugger;		
				
				var smt_manso = result["smt_manso"]; // Boolean
				if(!smt_manso){
					var valorDigitado = formContext.getAttribute("smt_valor").getValue();
					formContext.getAttribute("smt_valor").setValue(valorDigitado + (valorDigitado * 0.2));
				}
            },
            function (error) {
                console.log(error.message);
            }
        );
    }
}